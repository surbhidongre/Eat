{"version":3,"sources":["components/Contact.js","components/reservation.js","index.js"],"names":["Contacts","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pax","date","time","availability","name","address","allotedslots","availableDate","showAvailabilty","selectTimeSlot","console","log","Moment","params","format","react_default","a","createElement","className","class","placeholder","type","React","Component","ReserVation","steps","hour","minute","second","datesAvailable","timeslotsAvailable","allowedPeople","handleSearchAvailibility","e","fetch","method","headers","Accept","then","response","json","data","setState","attributes","openings","availableslots","requestedDate","requestedStartTime","count","startIndex","i","length","allotedtop5slots","p","push","j","catch","error","onChangeDate","event","target","value","onChangeTime","onChangePax","_this2","maxpeopleAllowed","address_line_1","keys","values","_this3","style","display","main","defaultItem","onChange","onClick","map","item","concat","data-time","Contact","ReactDOM","render","reservation","document","querySelector"],"mappings":"2OAmEeA,cA7DX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,IAAK,GACLC,KAAM,GACNC,KAAM,GACNC,aAAc,GACdC,KAAK,GACLC,QAAQ,GACRC,aAAa,GACbC,cAAc,GACdC,iBAAgB,EAChBC,eAAe,IAIvBC,QAAQC,IAAIC,IAAOpB,EAAKD,MAAMsB,OAAOZ,MAAMa,OAAO,YAhB/BtB,wEAoBf,OACIuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACHH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQvB,KAAKJ,MAAMsB,OAAOT,MACxCW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBvB,KAAKJ,MAAMsB,OAAOR,UAE9DU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQvB,KAAKI,MAAMK,MAAUW,EAAAC,EAAAC,cAAA,6BAAqBtB,KAAKJ,MAAMsB,OAAOZ,KAAvC,OAAiDN,KAAKJ,MAAMsB,OAAOJ,eAAnE,QAAwFd,KAAKJ,MAAMsB,OAAOb,KACrJe,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBvB,KAAKI,MAAMM,WAI/CU,EAAAC,EAAAC,cAAA,OAAKE,MAAM,WACPJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,cACPJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SACXJ,EAAAC,EAAAC,cAAA,SAAOG,YAAY,aAAaC,KAAK,UAErCN,EAAAC,EAAAC,cAAA,OAAKE,MAAM,SACXJ,EAAAC,EAAAC,cAAA,SAAOG,YAAY,YAAYC,KAAK,WAGxCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SAAOG,YAAY,WAAWC,KAAK,UAEnCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SAAOG,YAAY,QAAQC,KAAK,WAGpCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOG,YAAY,kBAAkBC,KAAK,UAlBlD,8EAqBIN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,iCAvDOI,IAAMC,WC4LdC,cAzLX,SAAAA,EAAYjC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,IACfhC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KAAMJ,KAiBVkC,MAAQ,CACJC,KAAM,EACNC,OAAQ,GACRC,OAAQ,IArBOpC,EAuBnBqC,eAAe,GAvBIrC,EAwBnBsC,mBAAmB,GAxBAtC,EAyBnBuC,cAAc,GAzBKvC,EAiEnBwC,yBAA2B,SAACC,GAGxBC,MADU,2FACC,CACPC,OAAQ,MACRC,QAAS,CACLC,OAAQ,sBAEbC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAE1BF,KAAK,SAACG,GAGHjD,EAAKkD,SAAS,CAACvC,aAAcsC,EAAKA,KAAKE,WAAWC,WAClD,IACIC,EADAC,EAActD,EAAKO,MAAME,KAEzB8C,EAAmBvD,EAAKO,MAAMG,KAClC2C,EAAgBrD,EAAKO,MAAMI,aAAa2C,GAGxC,IAFA,IAAIE,EAAM,EACNC,EAAW,EACNC,EAAI,EAAGA,EAAIL,EAAeM,OAAQD,IACnCL,EAAeK,KAAKH,IAEpBE,EAAWC,GAKnB,IADA,IAAIE,EAAiB,GACZC,EAAEJ,EAAWI,EAAER,EAAeM,OAAOE,IAElCL,EAAM,IAGVI,EAAiBE,KAAKT,EAAeQ,IACrCL,KAIR,GAAGA,EAAQ,EACP,IAAI,IAAIO,EAAE,EAAEA,EAAE,EAAEA,IACZH,EAAiBE,KAAK,eACtBN,IAIRxD,EAAKkD,SAAS,CAACpC,aAAa8C,IAC5B5D,EAAKkD,SAAS,CAAClC,iBAAgB,MAOlCgD,MACG,SAACC,GAAD,OAAW/C,QAAQC,IAAI8C,MAvHhBjE,EA4HnBkE,aAAe,SAACC,GACZnE,EAAKkD,SAAS,CAEVzC,KAAM0D,EAAMC,OAAOC,SA/HRrE,EAkInBsE,aAAe,SAACH,GAEZnE,EAAKkD,SAAS,CACVxC,KAAMyD,EAAMC,OAAOC,SArIRrE,EAwInBuE,YAAc,SAACJ,GAEXnE,EAAKkD,SAAS,CACV1C,IAAK2D,EAAMC,OAAOC,SAzItBrE,EAAKO,MAAQ,CACTC,IAAK,GACLC,KAAM,GACNC,KAAM,GACNC,aAAc,GACdC,KAAK,GACLC,QAAQ,GACRC,aAAa,GACbC,cAAc,GACdC,iBAAgB,EAChBC,eAAe,IAZJjB,mFA0BC,IAAAwE,EAAArE,KAEhBuC,MADY,2FACD,CACPC,OAAQ,MACRC,QAAS,CACLC,OAAQ,sBAEbC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAE1BF,KAAK,SAACG,GAEH,IAAIwB,EAAiB,GACrBD,EAAKtB,SAAS,CAACtC,KAAMqC,EAAKA,KAAKE,WAAWvC,OAC1C4D,EAAKtB,SAAS,CAACrC,QAASoC,EAAKA,KAAKE,WAAWuB,iBAE7C,IADA,IAAIf,EAAO1D,OAAO0E,KAAK1B,EAAKA,KAAKE,WAAWC,UAAUO,OAC9CD,EAAE,EAAEA,EAAEC,EAAOD,IAEjBc,EAAKnC,eAAeyB,KAAM7D,OAAO0E,KAAK1B,EAAKA,KAAKE,WAAWC,UAAUM,IAGxEc,EAAKlC,mBAAoBrC,OAAO0E,KAAK1B,EAAKA,KAAKE,WAAWC,UAAUoB,EAAKnC,eAAe,IAExFmC,EAAKlC,mBAAmBrC,OAAO2E,OAAO3B,EAAKA,KAAKE,WAAWC,UAAU,GAErE,IAAK,IAAIW,EAAE,EAAEA,GAAG,GAAGA,IAEhBU,EAAiBX,KAAKC,EAAG,WAE5BS,EAAKjC,cAAckC,IAGvBT,MACG,SAACC,GAAD,OAAW/C,QAAQC,IAAI8C,sCAqF1B,IAAAY,EAAA1E,KACL,OACIoB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA8CoD,MAAO,CAAEC,QAAqC,IAA3B5E,KAAKI,MAAMU,eAAqB,QAAU,SAElHM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQvB,KAAKI,MAAMK,MACjCW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBvB,KAAKI,MAAMM,WAG/CU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAGXH,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAc/B,KAAM9C,KAAKoC,cAAe8B,MAAOlE,KAAKI,MAAMC,IAAKyE,YAAY,WACnEC,SAAU/E,KAAKoE,cACvBhD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAc/B,KAAM9C,KAAKkC,eAAgBgC,MAAOlE,KAAKI,MAAME,KACnDyE,SAAU/E,KAAK+D,eACvB3C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAc/B,KAAM9C,KAAKmC,mBAAoB+B,MAAOlE,KAAKI,MAAMG,KACvDwE,SAAU/E,KAAKmE,eACvB/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkByD,QAAShF,KAAKqC,0BAA/C,YAGZjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA+CoD,MAAO,CAAEC,QAAU5E,KAAKI,MAAMS,iBAA8C,IAA3Bb,KAAKI,MAAMU,eAAqB,QAAU,SACrJM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,kEACEtB,KAAKI,MAAMO,aAAasE,IAAI,SAAAC,GAAI,OAC1B9D,EAAAC,EAAAC,cAAA,OAAK0D,QAAS,kBAAIN,EAAK3B,SAAS,CAACjC,eAAeoE,KAAQ3D,UAAS,IAAA4D,OAAa,gBAAPD,EAAuB,iBAAmB,mBAAqBE,YAAWF,GAAOA,OAMxI,KAA9BlF,KAAKI,MAAMU,gBAAsD,gBAA9Bd,KAAKI,MAAMU,gBAAqCM,EAAAC,EAAAC,cAAC+D,EAAD,CAAUnE,OAAQlB,KAAKI,iBApL9FuB,IAAMC,WCDhC0D,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAAeC,SAASC,cAAc","file":"static/js/main.a8635b12.chunk.js","sourcesContent":["import React from 'react'\r\nimport '@progress/kendo-theme-default/dist/all.css'\r\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\r\nimport Moment from 'moment';\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pax: '',\r\n            date: '',\r\n            time: '',\r\n            availability: [],\r\n            name:'',\r\n            address:'',\r\n            allotedslots:[],\r\n            availableDate:[],\r\n            showAvailabilty:false,\r\n            selectTimeSlot:''\r\n\r\n        };\r\n \r\n    console.log(Moment(this.props.params.date).format(\"MonDDYY\"));\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ui raised very padded text container segment\">\r\n            <h2 className=\"ui header\">\r\n            <div className=\"col-sm-5\">\r\n                        <h1 className=\"mb-5\">{this.props.params.name}</h1>\r\n                        <h2 className=\"ui small label\">{this.props.params.address}</h2>\r\n                    </div>\r\n            <div className=\"col-sm-12\">\r\n                <h1 className=\"mb-5\">{this.state.name}</h1><h3>Reservation for {this.props.params.date} at {this.props.params.selectTimeSlot} for {this.props.params.pax}</h3>\r\n                <h2 className=\"ui small label\">{this.state.address}</h2>\r\n            </div>\r\n            </h2>\r\n            \r\n            <div class=\"ui form\">\r\n                <div class=\"two fields\">\r\n                    <div class=\"field\">\r\n                    <input placeholder=\"First Name\" type=\"text\"/>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                    <input placeholder=\"Last Name\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                    <input placeholder=\"Phone No\" type=\"text\"/>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                    <input placeholder=\"Email\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <input placeholder=\"Special Request\" type=\"text\"/>\r\n                </div>\r\n                By continuing, you agree to Eatâ€™s Terms of Service and Privacy Policy.\r\n                <button className=\"ui green button\">Complete ReserVation</button>\r\n            </div>\r\n            </div>\r\n        );\r\n        }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport '@progress/kendo-theme-default/dist/all.css'\r\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\r\nimport Contacts from './Contact';\r\n\r\n\r\nclass ReserVation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pax: '',\r\n            date: '',\r\n            time: '',\r\n            availability: [],\r\n            name:'',\r\n            address:'',\r\n            allotedslots:[],\r\n            availableDate:[],\r\n            showAvailabilty:false,\r\n            selectTimeSlot:''\r\n\r\n        };\r\n\r\n\r\n    }\r\n    steps = {\r\n        hour: 1,\r\n        minute: 15,\r\n        second: 30\r\n    };\r\n    datesAvailable=[];\r\n    timeslotsAvailable=[];\r\n    allowedPeople=[];\r\n    componentDidMount() {\r\n          let url = 'https://api.sandbox.eatapp.co/public/v2/restaurants/14bf9273-64f3-4b39-875b-a616fc83f453'\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"application/json\"\r\n            },\r\n        }).then((response) => response.json())\r\n        \r\n            .then((data) => \r\n            {\r\n                var maxpeopleAllowed=[];\r\n                this.setState({name: data.data.attributes.name})\r\n                this.setState({address: data.data.attributes.address_line_1})\r\n                var length=Object.keys(data.data.attributes.openings).length;\r\n                for(var i=0;i<length;i++)\r\n                {\r\n                    this.datesAvailable.push((Object.keys(data.data.attributes.openings)[i]))\r\n                }\r\n               \r\n                 this.timeslotsAvailable=(Object.keys(data.data.attributes.openings)[this.datesAvailable[1]])\r\n             \r\n                 this.timeslotsAvailable=Object.values(data.data.attributes.openings)[1];\r\n\r\n                 for (var j=1;j<=50;j++)\r\n                 {\r\n                    maxpeopleAllowed.push(j+ \" People\");\r\n                 }\r\n                 this.allowedPeople=maxpeopleAllowed;\r\n            \r\n            })\r\n            .catch(\r\n                (error) => console.log(error)\r\n            );\r\n\r\n\r\n\r\n    }\r\n\r\n    handleSearchAvailibility = (e) => {\r\n        //console.log(e);\r\n        let url = 'https://api.sandbox.eatapp.co/public/v2/restaurants/14bf9273-64f3-4b39-875b-a616fc83f453'\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"application/json\"\r\n            },\r\n        }).then((response) => response.json())\r\n        \r\n            .then((data) => \r\n            {\r\n                \r\n                this.setState({availability: data.data.attributes.openings})\r\n                var requestedDate=this.state.date\r\n                var availableslots=[]\r\n                var requestedStartTime=this.state.time\r\n                availableslots= this.state.availability[requestedDate]\r\n                var count=0;\r\n                var startIndex=0;\r\n                for (var i = 0; i < availableslots.length; i++) {\r\n                    if (availableslots[i]===requestedStartTime)\r\n                    {\r\n                        startIndex=i;\r\n                    }\r\n                \r\n                }\r\n                var allotedtop5slots=[];\r\n                for (var p=startIndex;p<availableslots.length;p++)\r\n                {\r\n                        if (count<5)\r\n                        {\r\n                        //console.log(availableslots[p]);\r\n                        allotedtop5slots.push(availableslots[p]);\r\n                        count++;\r\n                        }\r\n                }\r\n               \r\n                if(count < 5){\r\n                    for(var j=0;j<5;j++){\r\n                        allotedtop5slots.push(\"Unavailable\");\r\n                        count++;\r\n                    }\r\n                }\r\n    \r\n                this.setState({allotedslots:allotedtop5slots});\r\n                this.setState({showAvailabilty:true});\r\n              \r\n              \r\n            \r\n            \r\n            \r\n            })\r\n            .catch(\r\n                (error) => console.log(error)\r\n            );\r\n\r\n\r\n    }\r\n    onChangeDate = (event) => {\r\n        this.setState({\r\n            \r\n            date: event.target.value,\r\n        });\r\n    }\r\n    onChangeTime = (event) => {\r\n\r\n        this.setState({\r\n            time: event.target.value,\r\n        });\r\n    }\r\n    onChangePax = (event) => {\r\n\r\n        this.setState({\r\n            pax: event.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <form>\r\n            <div className=\"ui raised very padded text container segment\"style={{ display: (this.state.selectTimeSlot=='' ? 'block' : 'none') }}>\r\n\r\n                    <h2 className=\"ui header\">\r\n                        \r\n                    <div className=\"col-sm-5\">\r\n                        <h1 className=\"mb-5\">{this.state.name}</h1>\r\n                        <h2 className=\"ui small label\">{this.state.address}</h2>\r\n                    </div>\r\n                        </h2>\r\n                    <div className=\"ui action input\">\r\n                    \r\n                \r\n                        <DropDownList data={this.allowedPeople} value={this.state.pax} defaultItem=\"2 People\"\r\n                                onChange={this.onChangePax}/>\r\n                        <DropDownList data={this.datesAvailable} value={this.state.date}\r\n                                onChange={this.onChangeDate}/>\r\n                        <DropDownList data={this.timeslotsAvailable} value={this.state.time}\r\n                                onChange={this.onChangeTime}/>\r\n                        <div className=\"ui green button\" onClick={this.handleSearchAvailibility}>Search</div>\r\n                    </div>\r\n            </div>\r\n            <div className=\"ui raised very padded text container segment\" style={{ display: (this.state.showAvailabilty && this.state.selectTimeSlot=='' ? 'block' : 'none') }} >\r\n                <div className=\"time-slots confirmation\" >\r\n                    <h4>Available openings, please select a time to reserve:</h4>\r\n                    { this.state.allotedslots.map(item=>(\r\n                            <div onClick={()=>this.setState({selectTimeSlot:item})} className={` ${item==='Unavailable' ? 'ui grey button' : 'ui green button'}`} data-time={item}>{item}</div>\r\n                    ))}\r\n                    \r\n                </div>\r\n            </div>\r\n          \r\n            {(this.state.selectTimeSlot !== ''&& this.state.selectTimeSlot !== 'Unavailable') && <Contacts params={this.state}/>}\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReserVation;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Reservation from './components/reservation'\n\n\nReactDOM.render(<Reservation/>,document.querySelector(\"#root\"));"],"sourceRoot":""}